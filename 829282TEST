local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/MlFrvWM/BBLT81/main/BL81827TC", true))()

local window = library:AddWindow("Sad TESTTTT", {
    main_color = Color3.fromRGB(10, 22, 74),
    min_size = Vector2.new(685, 550),
    can_resize = false,
})

local function setFontRecursive(guiObject, font)
    for _, obj in pairs(guiObject:GetDescendants()) do
        if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("TextBox") then
            obj.Font = font
        end
    end
end

spawn(function()
    repeat wait() until window.gui
    setFontRecursive(window.gui, Enum.Font.GothamSemibold)
end)

local tabCal = window:AddTab("Damage Calculator")

-- Fatores derivados do exemplo
local BASE_DAMAGE_FACTOR = 0.1       -- base = 10% da força (0 packs)
local PACK_FACTOR_PER_PACK = 0.0335  -- cada pack = +3.35% da força
local PACKS_MAX = 8

-- Converte "200B", "1.5T", "3Qa" para número
local function parseValue(s)
    if not s then return 0 end
    s = s:upper():gsub("%s", ""):gsub(",", "")
    local suffixes = { B = 1e9, T = 1e12, QA = 1e15 }
    local numPart, suf = s:match("^([%-]?[%d%.]+)(%a*)$")
    if not numPart then return 0 end
    local n = tonumber(numPart) or 0
    if suf ~= "" and suffixes[suf] then
        return n * suffixes[suf]
    end
    return n
end

-- Formata número para string com sufixo
local function formatValue(n)
    local absn = math.abs(n)
    local sign = n < 0 and "-" or ""
    if absn >= 1e15 then
        return string.format("%s%.2fQa", sign, absn / 1e15)
    elseif absn >= 1e12 then
        return string.format("%s%.2fT", sign, absn / 1e12)
    elseif absn >= 1e9 then
        return string.format("%s%.2fB", sign, absn / 1e9)
    else
        return string.format("%s%.2f", sign, absn)
    end
end

-- Atualiza todos os labels
local function updateLabels(strength)
    local baseDamage = strength * BASE_DAMAGE_FACTOR
    for i = 1, PACKS_MAX do
        local finalValue = strength * (BASE_DAMAGE_FACTOR + PACK_FACTOR_PER_PACK * i)
        local percentIncrease = baseDamage > 0 and ((finalValue / baseDamage) - 1) * 100 or 0
        tabCal.labels[i].Text = string.format(
            "%d pack(s): %s (+%.2f%%)",
            i,
            formatValue(finalValue),
            percentIncrease
        )
    end
end

-- Cria os labels
tabCal.labels = {}
for i = 1, PACKS_MAX do
    local lbl = tabCal:AddLabel(string.format("%d pack(s): -", i))
    table.insert(tabCal.labels, lbl)
end

-- Valor padrão
local defaultText = "200B"
updateLabels(parseValue(defaultText))

-- Caixa de texto
local textBox = tabCal:AddTextBox("Base Damage (Qa, T, B)", function() end, {
    clear = false,
    text = defaultText
})

-- Variável de controle do auto update
local autoUpdate = true

-- Botão para ativar/desativar atualização automática
tabCal:AddButton("Toggle Auto Update", function()
    autoUpdate = not autoUpdate
    print("Auto Update: " .. tostring(autoUpdate))
end)

-- Loop de atualização em tempo real
spawn(function()
    local lastText = ""
    while wait(0.1) do
        if autoUpdate and textBox.Text ~= lastText then
            lastText = textBox.Text
            updateLabels(parseValue(lastText))
        end
    end
end)
